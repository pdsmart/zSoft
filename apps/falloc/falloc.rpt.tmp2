
falloc.elf: file format elf32-littlearm
falloc.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1fff8000

Program Header:
 LOAD off 0x00000000 vaddr 0x1fff0000 paddr 0x1fff0000 align 2**16
 filesz 0x00008564 memsz 0x00008564 flags r-x
 LOAD off 0x00018000 vaddr 0x20018000 paddr 0x1fff8564 align 2**16
 filesz 0x00000428 memsz 0x00000444 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name Size VMA LMA File off Algn
 0 .text 00000560 1fff8000 1fff8000 00008000 2**2
 CONTENTS, ALLOC, LOAD, READONLY, CODE
 1 .fini 00000004 1fff8560 1fff8560 00008560 2**2
 CONTENTS, ALLOC, LOAD, READONLY, CODE
 2 .usbdescriptortable 00000000 20018000 20018000 00018428 2**0
 CONTENTS
 3 .dmabuffers 00000000 20018000 20018000 00018428 2**0
 CONTENTS
 4 .usbbuffers 00000000 20018000 20018000 00018428 2**0
 CONTENTS
 5 .data 00000428 20018000 1fff8564 00018000 2**3
 CONTENTS, ALLOC, LOAD, DATA
 6 .bss 0000001c 20018428 1fff898c 00018428 2**2
 ALLOC
 7 .ARM.attributes 00000030 00000000 00000000 00018428 2**0
 CONTENTS, READONLY
 8 .debug_frame 000000d8 00000000 00000000 00018458 2**2
 CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1fff8000 l d .text	00000000 .text
1fff8560 l d .fini	00000000 .fini
20018000 l d .usbdescriptortable	00000000 .usbdescriptortable
20018000 l d .dmabuffers	00000000 .dmabuffers
20018000 l d .usbbuffers	00000000 .usbbuffers
20018000 l d .data	00000000 .data
20018428 l d .bss	00000000 .bss
00000000 l d .ARM.attributes	00000000 .ARM.attributes
00000000 l d .debug_frame	00000000 .debug_frame
00000000 l df *ABS*	00000000 crtstuff.c
1fff8400 l F .text	00000000 __do_global_dtors_aux
20018428 l .bss	00000000 completed.8605
1fff8424 l F .text	00000000 frame_dummy
2001842c l .bss	00000000 object.8610
1fff855c l O .text	00000000 __frame_dummy_init_array_entry
00000000 l df *ABS*	00000000 __call_atexit.c
1fff845c l F .text	00000014 register_fini
00000000 l df *ABS*	00000000 atexit.c
00000000 l df *ABS*	00000000 fini.c
00000000 l df *ABS*	00000000 __atexit.c
00000000 l df *ABS*	00000000 impure.c
20018000 l O .data	00000428 impure_data
00000000 l df *ABS*	00000000 /srv/dvlp/Projects/dev/github/tranZPUter/software/tools/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/crti.o
00000000 l df *ABS*	00000000 /srv/dvlp/Projects/dev/github/tranZPUter/software/tools/arm/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7e-m/fpu/crtn.o
00000000 l df *ABS*	00000000 
00000000 l *UND*	00000000 printFSCode
00000000 l *UND*	00000000 f_expand
20018428 l .bss	00000000 __bss_start__
00000000 l *UND*	00000000 xatoi
00000000 l *UND*	00000000 xprintf
00000000 l *UND*	00000000 _VectorsFlash
20018444 l .bss	00000000 __bss_end__
00000000 l *UND*	00000000 xputs
00000000 l *UND*	00000000 software_init_hook
00000000 l *UND*	00000000 main
1fff8560 l .text	00000000 __init_array_end
00000000 l *UND*	00000000 hardware_init_hook
1fff8558 l .text	00000000 __preinit_array_end
00000000 l *UND*	00000000 __stack
1fff8558 l .text	00000000 __init_array_start
00000000 l *UND*	00000000 _exit
1fff8558 l .text	00000000 __preinit_array_start
00000000 l *UND*	00000000 free
1fff8564 g .fini	00000000 __exidx_end
1fff8564 g .fini	00000000 _etext
20018428 g .bss	00000000 _sbss
00000000 w *UND*	00000000 __fini_array_end
00000000 w *UND*	00000000 malloc
20018000 g .data	00000000 _sdata
1fff8564 g .fini	00000000 __exidx_start
1fff8548 g O .text	00000004 _global_impure_ptr
20018444 g .bss	00000000 __bss_end
1fff854c g F .text	00000000 _init
1fff847c g F .text	00000028 __libc_fini_array
20018444 g .bss	00000000 _ebss
00000000 w *UND*	00000000 __deregister_frame_info
1fff84a4 g F .text	000000a4 __register_exitproc
0000001f g *ABS*	00000000 _teensy_model_identifier
00000000 w *UND*	00000000 __fini_array_start
00000000 w *UND*	00000000 __libc_fini
1fff8560 g F .fini	00000000 _fini
1fff8470 g F .text	0000000c atexit
20030000 g .bss	00000000 _estack
20018428 g .data	00000000 _edata
00000000 w *UND*	00000000 _Jv_RegisterClasses
00000000 w *UND*	00000000 __register_frame_info


